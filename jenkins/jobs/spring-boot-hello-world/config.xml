<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/faiyaz96/python-http-server</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>* * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
# download from git
project=&quot;python-http-server&quot;
port=9000
docker=&quot;sudo docker&quot;
# check for running container
if $docker ps | grep $project; then
        $docker stop $project
fi
# check for stopped container
if $docker ps -a | grep $project; then
        $docker rm $project
fi
# check for image
if $docker images | grep $project; then 
        $docker rmi $project
fi
# compile code
#mvn clean package
# create docker image
$docker build -t $project .
# run docker image
$docker run -d -p $port:9000 --name $project $project

$docker network connect project3_default $container
echo &quot;location /${project}/${BRANCH_NAME}/ {&quot; &gt; ${container}.conf
echo -e &quot;\t proxy_pass http://${container}:9000/;&quot; &gt;&gt; ${container}.conf
echo &quot;}&quot; &gt;&gt; ${container}.conf
$docker cp ${container}.conf nginx:/etc/nginx/conf.d/${container}.conf
$docker exec nginx nginx -s reload</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
